
#Область ПрограммныйИнтерфейс

// Подключает скрипты к хтмл Полю
//
// Параметры:
//  Поле  					- ПолеФормы - Поле формы с видом ПолеHTMLДокумента
//	ДополнительныеПараметры	- Структура 
//
Процедура ПодключитьСрипт(АдесФайла, Поле) Экспорт 

	Форма = НайтиФормуЭлемента(Поле);
	
	ТекстСтраницы = Форма[Поле.ПутьКДанным];
	Если ПустаяСтрока(ТекстСтраницы) Тогда
		Документ = НовыйДокументХТМЛ();
	Иначе
		Документ = ТекстВДокументХТМЛ(ТекстСтраницы);	
	КонецЕсли;
	
	ДобавляемыйЭлемент = Документ.СоздатьЭлемент("script");
	ДобавляемыйЭлемент.Источник = АдесФайла;
	Документ.ЭлементДокумента.ДобавитьДочерний(ДобавляемыйЭлемент);
		
	Форма[Поле.ПутьКДанным] = ДокументХТМЛВТекст(Документ);
	
КонецПроцедуры // ПодключитьСрипт()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ПодключитьРасширенныеСкрипты(Поле) Экспорт 

	ПодключитьСрипт(пс_СкриптыСерверПовтИсп.АдресОсновногоРасширенияСкриптов(), Поле);
	
КонецПроцедуры // ПодключитьСкрипты()


#КонецОбласти

#Область HTML

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ТекстВДокументХТМЛ(текстХТМЛ)

	Чтение = Новый ЧтениеHTML;
	Чтение.УстановитьСтроку(текстХТМЛ);
	Построитель = Новый ПостроительDOM;
	ДокументХТМЛ = Построитель.Прочитать(Чтение);
	Чтение.Закрыть();
	Возврат ДокументХТМЛ;

КонецФункции // ТекстВДокументХТМЛ()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ДокументХТМЛВТекст(Документ)

	ЗаписьХТМЛ = Новый ЗаписьHTML;
	ЗаписьХТМЛ.УстановитьСтроку();
	ЗаписьДОМ = Новый ЗаписьDOM;
	ЗаписьДОМ.КонфигурацияDOM.УстановитьПараметр("discard-default-content", Истина);
	ЗаписьДОМ.Записать(Документ, ЗаписьХТМЛ);
	ХТМЛТекст = ЗаписьХТМЛ.Закрыть();
	Возврат СтрЗаменить(ХТМЛТекст, "<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.0 Transitional//EN"">", "<!DOCTYPE html>");

КонецФункции // ДокументХТМЛВТекст()
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает форму владелец переданного элемента
//
// Параметры:
//  Поле  - ПолеФормы  
//
// Возвращаемое значение:
//   ФормаКлиентскогоПриложения   
//
Функция НайтиФормуЭлемента(Поле)

	Родитель = Поле.Родитель;
	Если ТипЗнч(Родитель) = Тип("ФормаКлиентскогоПриложения") Тогда
		Возврат Родитель;
	Иначе
		Возврат НайтиФормуЭлемента(Родитель);
	КонецЕсли;

КонецФункции // НайтиФормуЭлемента()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция НовыйДокументХТМЛ()

	Документ = Новый ДокументHTML; 
	УзелХЕАД = Документ.СоздатьЭлемент("HEAD");	
	УзелБАДИ = Документ.СоздатьЭлемент("BODY");
	Документ.ЭлементДокумента.ДобавитьДочерний(УзелХЕАД);
	Документ.ЭлементДокумента.ДобавитьДочерний(УзелБАДИ);			
	Возврат Документ;

КонецФункции // НовыйДокументХТМЛ()

#КонецОбласти




