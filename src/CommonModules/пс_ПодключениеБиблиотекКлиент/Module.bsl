Процедура РаспаковатьФайлыПодключаемыхБиблиотек() Экспорт
	МассивМакетов = Новый Соответствие;
	МассивМакетов.Вставить("Monaco", "monaco");
	Описание = Новый ОписаниеОповещения("ПроверитьРаспаковатьБиблиотеки", ЭтотОбъект, МассивМакетов);
	НачатьПолучениеКаталогаВременныхФайлов(Описание);
КонецПроцедуры

// Описание
// 
// Параметры:
// 	Каталог - Соответствие - Описание
// 	МассивБиблиотек	-	Строка
Процедура ПроверитьРаспаковатьБиблиотеки(Каталог, СоответствиеБиблиотек) Экспорт
	
	Если Не СоответствиеБиблиотек.Количество() Тогда
		Возврат;
	КонецЕсли;

	Для Каждого текБиблиотека Из СоответствиеБиблиотек Цикл
		ПроверяемаяБиблиотека = текБиблиотека;
		Прервать;
	КонецЦикла;
	КаталогБиблиотеки = Новый Файл(Каталог + ПроверяемаяБиблиотека.Ключ);
	Параметры = Новый Структура();
	Параметры.Вставить("ПроверяемаяБиблиотека", ПроверяемаяБиблиотека);
	Параметры.Вставить("СоответствиеБиблиотек", СоответствиеБиблиотек);
	Параметры.Вставить("Каталог", Каталог);
	Описание = Новый ОписаниеОповещения("БиблиотекаРаспакована", ЭтотОбъект, Параметры);
	КаталогБиблиотеки.НачатьПроверкуСуществования(Описание);
			
КонецПроцедуры

Процедура БиблиотекаРаспакована(Существует, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.СоответствиеБиблиотек.Удалить(ДополнительныеПараметры.ПроверяемаяБиблиотека.Ключ);	
	Если Не Существует Тогда
		РасположениеАрхива = пс_ПодключениеБиблиотекВызовСервера.ПоместитьВХранилищеОбщийМакет(
			ДополнительныеПараметры.ПроверяемаяБиблиотека.Значение);
		ДвоичныеДанныеАрхива = ПолучитьИзВременногоХранилища(РасположениеАрхива);
		Если ТипЗнч(ДвоичныеДанныеАрхива) = Тип("ДвоичныеДанные") Тогда
			#Если Не ВебКлиент Тогда
			Поток = ДвоичныеДанныеАрхива.ОткрытьПотокДляЧтения();
			Чтение = Новый ЧтениеZipФайла(Поток);
			Чтение.ИзвлечьВсе(ДополнительныеПараметры.Каталог + ДополнительныеПараметры.ПроверяемаяБиблиотека.Ключ);
			Чтение.Закрыть();
			#КонецЕсли	
		КонецЕсли;				
	КонецЕсли;

	Если Не ДополнительныеПараметры.СоответствиеБиблиотек.Количество() Тогда
		Возврат;
	КонецЕсли;
	ПроверяемаяБиблиотека = Неопределено;
	Для Каждого текБиблиотека Из ДополнительныеПараметры.СоответствиеБиблиотек Цикл
		ПроверяемаяБиблиотека = текБиблиотека;
		Прервать;
	КонецЦикла;
	ДополнительныеПараметры.ПроверяемаяБиблиотека = ПроверяемаяБиблиотека;
	Описание = Новый ОписаниеОповещения("БиблиотекаРаспакована", ЭтотОбъект, ДополнительныеПараметры);
	КаталогБиблиотеки = Новый Файл(текБиблиотека.Каталог + ПроверяемаяБиблиотека.Ключ);
	КаталогБиблиотеки.НачатьПроверкуСуществования(Описание);
					
КонецПроцедуры