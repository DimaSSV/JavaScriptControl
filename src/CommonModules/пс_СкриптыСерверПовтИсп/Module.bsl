

// При первом обращении помещает двоичные данные во временное хранилише и кеширует на сервере
//
// Возвращаемое значение:
//   Строка   - Адрес временного хранилища, где лежат двоичные данные подключаемого расширения скриптов
//
Функция АдресОсновногоРасширенияСкриптов() Экспорт 

	Скрипт = ПолучитьОбщийМакет("пс_ПодключаемыеСкрипты");
	Поток = Новый ПотокВПамяти;
	// отключаем проверку парава "Вывод"
	УстановитьПривилегированныйРежим(Истина);
	Скрипт.Записать(Поток);
	Возврат ПоместитьДанныеВоВременноеХранилище(Поток.ЗакрытьИПолучитьДвоичныеДанные());

КонецФункции // АдресОсновногоРасширенияСкриптов()


Функция АдресСкриптаРедактораКода() Экспорт
	
	app = Обработки.пс_РедакторКода.ПолучитьМакет("app");
	// отключаем проверку парава "Вывод"
	УстановитьПривилегированныйРежим(Истина);
	Чтение = Новый ЧтениеТекста(app.ОткрытьПотокДляЧтения(), КодировкаТекста.UTF8);	
	ТекстСкрипта = Чтение.Прочитать();
	Чтение.Закрыть();
	
	АдресБазы = ПолучитьНавигационнуюСсылкуИнформационнойБазы();
	ТекстСкрипта = СтрЗаменить(ТекстСкрипта, "[ts_worker]", АдресБазы + "/" + АдресВоркераПоИмени("ts_worker"));
	ТекстСкрипта = СтрЗаменить(ТекстСкрипта, "[editor_worker]", АдресБазы + "/" + АдресВоркераПоИмени("editor_worker"));
	ТекстСкрипта = СтрЗаменить(ТекстСкрипта, "[html_worker]", АдресБазы + "/" + АдресВоркераПоИмени("html_worker"));
	ТекстСкрипта = СтрЗаменить(ТекстСкрипта, "[json_worker]", АдресБазы + "/" + АдресВоркераПоИмени("json_worker"));
	ТекстСкрипта = СтрЗаменить(ТекстСкрипта, "[css_worker]", АдресБазы + "/" + АдресВоркераПоИмени("css_worker"));
	
	Поток = Новый ПотокВПамяти;
	Запись = Новый ЗаписьТекста(Поток, КодировкаТекста.UTF8);
	Запись.Записать(ТекстСкрипта);
	Запись.Закрыть(); 
	Возврат ПоместитьДанныеВоВременноеХранилище(Поток.ЗакрытьИПолучитьДвоичныеДанные());
	
КонецФункции

Функция АдресРедактораКода() Экспорт
	
	АдресСкрипта = АдресСкриптаРедактораКода();
	Поток = Новый ПотокВПамяти;
	// отключаем проверку парава "Вывод"
	УстановитьПривилегированныйРежим(Истина);
	ХТМЛРедактора = Обработки.пс_РедакторКода.ПолучитьМакет("index");
	АдресБазы = ПолучитьНавигационнуюСсылкуИнформационнойБазы();
	ХТМЛРедактора.УстановитьТекст(СтрЗаменить(ХТМЛРедактора.ПолучитьТекст(), "[АдресСкрипта]", АдресБазы + "/" + АдресСкрипта));
	ХТМЛРедактора.Записать(Поток);	
	АдресРедактора = ПоместитьДанныеВоВременноеХранилище(Поток.ЗакрытьИПолучитьДвоичныеДанные());
	пс_СкриптыВызовСервера.ПоместитьВСерверныйКэш("АдресРедактораКода", АдресРедактора);
	Возврат АдресРедактора; 
	
КонецФункции

Функция ПоместитьДанныеВоВременноеХранилище(Данные)
	Возврат ПоместитьВоВременноеХранилище(Данные, Новый УникальныйИдентификатор);	
КонецФункции

Функция АдресВоркераПоИмени(Имя)
	
	Воркер = Обработки.пс_РедакторКода.ПолучитьМакет(Имя);
	Возврат ПоместитьДанныеВоВременноеХранилище(Воркер); 
	
КонецФункции
