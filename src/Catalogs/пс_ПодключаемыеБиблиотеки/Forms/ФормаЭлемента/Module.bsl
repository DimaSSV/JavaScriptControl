
&НаКлиенте
Процедура КомандаЗагрузить(Команда)
	Подключить(Истина);	
КонецПроцедуры

&НаКлиенте 
Процедура Подключить(УстановитьЕслиНеПодключено) Экспорт
    НачатьПодключениеРасширенияРаботыСФайлами(
        Новый ОписаниеОповещения(
            "ПослеПодключения",
            ЭтотОбъект,
            УстановитьЕслиНеПодключено));
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключения(Подключено, УстановитьЕслиНеПодключено) Экспорт
    Если Подключено Тогда
     	ВыбратьФайл();   
    ИначеЕсли УстановитьЕслиНеПодключено Тогда
        НачатьУстановкуРасширенияРаботыСФайлами(
            Новый ОписаниеОповещения(
                "Подключить",
                ЭтотОбъект,
                Ложь));
    Иначе
    	Сообщить("Не установлено расширение работы с файлами. Загрузка не возможна");
    КонецЕсли;    
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл()
	коллБэк = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтаФорма);
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите библиотеку, запакованную в ZIP";
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Расширение = "zip";
	Диалог.Фильтр = "(*.zip)|*.zip";
	Диалог.Показать(коллБэк);
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ВыбранныйФайл = ВыбранныеФайлы[0];
	ОбработчикОкончанияПомещения = Новый ОписаниеОповещения("ПомещениеФайлаЗавершение", ЭтаФорма);
	ТолькоПросмотр = Истина;
	НачатьПомещениеФайла(ОбработчикОкончанияПомещения,,ВыбранныйФайл, Ложь, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеФайлаЗавершение(Результат, Адрес, 
        ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
 	ТолькоПросмотр = Ложь;
 	ЗаполнитьТЧПоАрхиву(Адрес, ВыбранноеИмяФайла);
 	ОбновитьОтображениеДереваЭлементов();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧПоАрхиву(Адрес, ВыбранноеИмяФайла)
	Объект.Файлы.Очистить();
	Поток = ПолучитьИзВременногоХранилища(Адрес).ОткрытьПотокДляЧтения();
	Чтение = Новый ЧтениеZipФайла(Поток);
	Для Каждого текЭлемент Из Чтение.Элементы Цикл
		Если Не ПустаяСтрока(текЭлемент.Имя) Тогда
			ЗаполнитьЗначенияСвойств(Объект.Файлы.Добавить(), текЭлемент);
		КонецЕсли;			
	КонецЦикла;
	Объект.Файлы.Сортировать("Путь Убыв, Имя");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеДереваЭлементов()
	СтруктураБиблиотеки.ПолучитьЭлементы().Очистить();
	Для Каждого текФайл Из Объект.файлы Цикл
		УзелДобавляения = ПолучитьУзелДереваПоПутиКФайлу(текФайл.Путь);	
		ЗаполнитьЗначенияСвойств(УзелДобавляения.Добавить(), текФайл);		
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьОтображениеДереваЭлементов();
КонецПроцедуры

&НаКлиенте
Функция ПолучитьУзелДереваПоПутиКФайлу(ПутьКФайлу)
	Узел = СтруктураБиблиотеки.ПолучитьЭлементы();
	Если ПустаяСтрока(ПутьКФайлу) Тогда
		Возврат Узел;
	КонецЕсли;
	МассивПутиФайла = СтрРазделить(ПутьКФайлу, "\", Ложь);
	Для Каждого ЧастьПути Из МассивПутиФайла Цикл
		НижнийУзелПоИмени(ЧастьПути, Узел);
	КонецЦикла;	
	Возврат Узел;
КонецФункции

&НаКлиенте
Процедура НижнийУзелПоИмени(Имя, Узел)
	Для Каждого текЭлемент Из Узел Цикл
		Если текЭлемент.Имя = Имя Тогда
			Узел = текЭлемент.ПолучитьЭлементы();
			Возврат;
		КонецЕсли;		
	КонецЦикла;
	НовыйЭлемент = Узел.Добавить();
	НовыйЭлемент.Имя = Имя;
	Узел = НовыйЭлемент.ПолучитьЭлементы();		
КонецПроцедуры




