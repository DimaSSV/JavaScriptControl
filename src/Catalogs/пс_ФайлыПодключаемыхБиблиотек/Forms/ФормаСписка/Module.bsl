&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Владелец = НайтиВладельцаФайлов();
	Если Владелец.Пустая() И Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Владелец")Тогда
		Владелец = Параметры.Отбор.Владелец;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НайтиВладельцаФайлов()
	ПолеДляПоиска = Новый ПолеКомпоновкиДанных("Владелец");
	Для Каждого текОтбор Из Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы Цикл	
		Если текОтбор.ЛевоеЗначение = ПолеДляПоиска Тогда
			Возврат текОтбор.ПравоеЗначение;
		КонецЕсли;
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	Отказ = Истина;
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Копирование", Копирование);
	ДопПараметры.Вставить("ЭлементКопирования", Элемент.ТекущаяСтрока);
	ПослеПомещенияФайлов = Новый ОписаниеОповещения("ПослеПомещенияФайлов", ЭтаФорма, ДопПараметры);	
	Если Копирование Тогда
		МассивФайлов = Новый Массив;		
		МассивФайлов.Добавить(СкопироватьФайлНаСервере(Элемент.ТекущаяСтрока));
		ВыполнитьОбработкуОповещения(ПослеПомещенияФайлов, МассивФайлов);			
	Иначе
		пс_РаботаСФайламиКлиент.ВыбратьФайлы(ПослеПомещенияФайлов, УникальныйИдентификатор);			
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СкопироватьФайлНаСервере(Источник)
	Файл = Новый Файл(Источник.ПолноеИмяФайла);
	ФайлСтруктура = ПустаяСтруктураФайл();
	ЗаполнитьЗначенияСвойств(ФайлСтруктура, Файл);
	СсылкаНаФайл = Новый Структура;
	СсылкаНаФайл.Вставить("ИдентификаторФайла", Новый УникальныйИдентификатор);
	СсылкаНаФайл.Вставить("Имя", Источник.ИмяФайла);
	СсылкаНаФайл.Вставить("Расширение", Файл.Расширение);
	СсылкаНаФайл.Вставить("Файл", ФайлСтруктура);
	ОписаниеФайла = Новый Структура;
	ОписаниеФайла.Вставить("Адрес", 
		ПоместитьВоВременноеХранилище(Источник.Хранилище.Получить(), УникальныйИдентификатор));
	ОписаниеФайла.Вставить("ПомещениеФайлаОтменено", Ложь);
	ОписаниеФайла.Вставить("СсылкаНаФайл", СсылкаНаФайл);
	Возврат ОписаниеФайла;
КонецФункции

&НаКлиенте
Процедура ПослеПомещенияФайлов(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	Если ПомещенныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	// подготовим структуру для передачи на сервер.
	текПомещённыйФайл = ПомещенныеФайлы.Получить(0);
	Файл = ПустаяСтруктураФайл();
	ЗаполнитьЗначенияСвойств(Файл, текПомещённыйФайл.СсылкаНаФайл.Файл);
	СсылкаНаФайл = Новый Структура("ИдентификаторФайла,Имя,Расширение,Файл");
	ЗаполнитьЗначенияСвойств(СсылкаНаФайл, текПомещённыйФайл.СсылкаНаФайл, , "Файл");
	СсылкаНаФайл.Файл = Файл;
	ПомещённыйФайл = Новый Структура("Адрес,ПомещениеФайлаОтменено,СсылкаНаФайл");
	ЗаполнитьЗначенияСвойств(ПомещённыйФайл, текПомещённыйФайл, , "СсылкаНаФайл");
	ПомещённыйФайл.СсылкаНаФайл = СсылкаНаФайл;
	ПараметрыФормы = Новый Структура;
	
	Если ДополнительныеПараметры.Копирование Тогда
		ПараметрыФормы.Вставить("ЗначениеКопирования", ДополнительныеПараметры.ЭлементКопирования);
	Иначе
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("Владелец", Владелец));	
	КонецЕсли;
	
	
	ПараметрыФормы.Вставить("Файл", ПомещённыйФайл);
	ОткрытьФорму("Справочник.пс_ФайлыПодключаемыхБиблиотек.Форма.ФормаЭлемента"
		, ПараметрыФормы, ЭтаФорма);	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПустаяСтруктураФайл()
	Возврат Новый Структура("Имя,ИмяБезРасширения,ПолноеИмя,Путь,Расширение");
КонецФункции




